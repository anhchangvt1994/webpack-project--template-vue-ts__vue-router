/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
	const EffectScope: typeof import('vue')['EffectScope']
	const GENERAL_GREETING: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['GENERAL_GREETING']
	const ROUTER_BASE_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_BASE_PATH']
	const ROUTER_COMMENT_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_NAME']
	const ROUTER_COMMENT_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_PATH']
	const ROUTER_CONTENT_COMMENT_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_NAME']
	const ROUTER_CONTENT_COMMENT_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_PATH']
	const ROUTER_CONTENT_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_NAME']
	const ROUTER_CONTENT_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_PATH']
	const ROUTER_HOME_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_NAME']
	const ROUTER_HOME_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_PATH']
	const ROUTER_LOGIN_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_NAME']
	const ROUTER_LOGIN_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_PATH']
	const ROUTER_NOT_FOUND_NAME: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_NAME']
	const ROUTER_NOT_FOUND_PATH: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_PATH']
	const STORE_KEY_USER: typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['STORE_KEY_USER']
	const computed: typeof import('vue')['computed']
	const createApp: typeof import('vue')['createApp']
	const createRouter: typeof import('vue-router')['createRouter']
	const createWebHistory: typeof import('vue-router')['createWebHistory']
	const customRef: typeof import('vue')['customRef']
	const decode: typeof import('utils/StringHelper.ts')['decode']
	const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
	const defineComponent: typeof import('vue')['defineComponent']
	const deleteCookie: typeof import('utils/CookieHelper.ts')['deleteCookie']
	const effectScope: typeof import('vue')['effectScope']
	const encode: typeof import('utils/StringHelper.ts')['encode']
	const generateSentenceCase: typeof import('utils/StringHelper.ts')['generateSentenceCase']
	const generateTitleCase: typeof import('utils/StringHelper.ts')['generateTitleCase']
	const getCookie: typeof import('utils/CookieHelper.ts')['getCookie']
	const getCurrentInstance: typeof import('vue')['getCurrentInstance']
	const getCurrentScope: typeof import('vue')['getCurrentScope']
	const getCustomSlug: typeof import('utils/StringHelper.ts')['getCustomSlug']
	const getSlug: typeof import('utils/StringHelper.ts')['getSlug']
	const getSlugWithoutDash: typeof import('utils/StringHelper.ts')['getSlugWithoutDash']
	const getUnsignedLetters: typeof import('utils/StringHelper.ts')['getUnsignedLetters']
	const h: typeof import('vue')['h']
	const hashCode: typeof import('utils/StringHelper.ts')['hashCode']
	const inject: typeof import('vue')['inject']
	const isProxy: typeof import('vue')['isProxy']
	const isReactive: typeof import('vue')['isReactive']
	const isReadonly: typeof import('vue')['isReadonly']
	const isRef: typeof import('vue')['isRef']
	const markRaw: typeof import('vue')['markRaw']
	const nextTick: typeof import('vue')['nextTick']
	const onActivated: typeof import('vue')['onActivated']
	const onBeforeMount: typeof import('vue')['onBeforeMount']
	const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
	const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
	const onDeactivated: typeof import('vue')['onDeactivated']
	const onErrorCaptured: typeof import('vue')['onErrorCaptured']
	const onMounted: typeof import('vue')['onMounted']
	const onRenderTracked: typeof import('vue')['onRenderTracked']
	const onRenderTriggered: typeof import('vue')['onRenderTriggered']
	const onScopeDispose: typeof import('vue')['onScopeDispose']
	const onServerPrefetch: typeof import('vue')['onServerPrefetch']
	const onUnmounted: typeof import('vue')['onUnmounted']
	const onUpdated: typeof import('vue')['onUpdated']
	const provide: typeof import('vue')['provide']
	const reactive: typeof import('vue')['reactive']
	const readonly: typeof import('vue')['readonly']
	const ref: typeof import('vue')['ref']
	const resolveComponent: typeof import('vue')['resolveComponent']
	const setCookie: typeof import('utils/CookieHelper.ts')['setCookie']
	const shallowReactive: typeof import('vue')['shallowReactive']
	const shallowReadonly: typeof import('vue')['shallowReadonly']
	const shallowRef: typeof import('vue')['shallowRef']
	const toRaw: typeof import('vue')['toRaw']
	const toRef: typeof import('vue')['toRef']
	const toRefs: typeof import('vue')['toRefs']
	const toValue: typeof import('vue')['toValue']
	const triggerRef: typeof import('vue')['triggerRef']
	const unref: typeof import('vue')['unref']
	const useAttrs: typeof import('vue')['useAttrs']
	const useCssModule: typeof import('vue')['useCssModule']
	const useCssVars: typeof import('vue')['useCssVars']
	const useRoute: typeof import('vue-router')['useRoute']
	const useRouter: typeof import('vue-router')['useRouter']
	const useSentenceCase: typeof import('composable/useStringHelper.ts')['useSentenceCase']
	const useSlots: typeof import('vue')['useSlots']
	const useSlug: typeof import('composable/useStringHelper.ts')['useSlug']
	const useSlugWithoutDash: typeof import('composable/useStringHelper.ts')['useSlugWithoutDash']
	const useTitleCase: typeof import('composable/useStringHelper.ts')['useTitleCase']
	const useUnsignedLetters: typeof import('composable/useStringHelper.ts')['useUnsignedLetters']
	const watch: typeof import('vue')['watch']
	const watchEffect: typeof import('vue')['watchEffect']
	const watchPostEffect: typeof import('vue')['watchPostEffect']
	const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
	// @ts-ignore
	export type {
		Component,
		ComponentPublicInstance,
		ComputedRef,
		ExtractDefaultPropTypes,
		ExtractPropTypes,
		ExtractPublicPropTypes,
		InjectionKey,
		PropType,
		Ref,
		VNode,
		WritableComputedRef,
	} from 'vue'
	import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
	interface ComponentCustomProperties {
		readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
		readonly GENERAL_GREETING: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['GENERAL_GREETING']
		>
		readonly ROUTER_BASE_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_BASE_PATH']
		>
		readonly ROUTER_COMMENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_NAME']
		>
		readonly ROUTER_COMMENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_PATH']
		>
		readonly ROUTER_CONTENT_COMMENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_NAME']
		>
		readonly ROUTER_CONTENT_COMMENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_PATH']
		>
		readonly ROUTER_CONTENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_NAME']
		>
		readonly ROUTER_CONTENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_PATH']
		>
		readonly ROUTER_HOME_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_NAME']
		>
		readonly ROUTER_HOME_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_PATH']
		>
		readonly ROUTER_LOGIN_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_NAME']
		>
		readonly ROUTER_LOGIN_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_PATH']
		>
		readonly ROUTER_NOT_FOUND_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_NAME']
		>
		readonly ROUTER_NOT_FOUND_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_PATH']
		>
		readonly STORE_KEY_USER: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['STORE_KEY_USER']
		>
		readonly computed: UnwrapRef<typeof import('vue')['computed']>
		readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
		readonly createRouter: UnwrapRef<
			typeof import('vue-router')['createRouter']
		>
		readonly createWebHistory: UnwrapRef<
			typeof import('vue-router')['createWebHistory']
		>
		readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
		readonly decode: UnwrapRef<typeof import('utils/StringHelper.ts')['decode']>
		readonly defineAsyncComponent: UnwrapRef<
			typeof import('vue')['defineAsyncComponent']
		>
		readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
		readonly deleteCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['deleteCookie']
		>
		readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
		readonly encode: UnwrapRef<typeof import('utils/StringHelper.ts')['encode']>
		readonly generateSentenceCase: UnwrapRef<
			typeof import('utils/StringHelper.ts')['generateSentenceCase']
		>
		readonly generateTitleCase: UnwrapRef<
			typeof import('utils/StringHelper.ts')['generateTitleCase']
		>
		readonly getCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['getCookie']
		>
		readonly getCurrentInstance: UnwrapRef<
			typeof import('vue')['getCurrentInstance']
		>
		readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
		readonly getCustomSlug: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getCustomSlug']
		>
		readonly getSlug: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getSlug']
		>
		readonly getSlugWithoutDash: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getSlugWithoutDash']
		>
		readonly getUnsignedLetters: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getUnsignedLetters']
		>
		readonly h: UnwrapRef<typeof import('vue')['h']>
		readonly hashCode: UnwrapRef<
			typeof import('utils/StringHelper.ts')['hashCode']
		>
		readonly inject: UnwrapRef<typeof import('vue')['inject']>
		readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
		readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
		readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
		readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
		readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
		readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
		readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
		readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
		readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
		readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
		readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
		readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
		readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
		readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
		readonly onRenderTriggered: UnwrapRef<
			typeof import('vue')['onRenderTriggered']
		>
		readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
		readonly onServerPrefetch: UnwrapRef<
			typeof import('vue')['onServerPrefetch']
		>
		readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
		readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
		readonly provide: UnwrapRef<typeof import('vue')['provide']>
		readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
		readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
		readonly ref: UnwrapRef<typeof import('vue')['ref']>
		readonly resolveComponent: UnwrapRef<
			typeof import('vue')['resolveComponent']
		>
		readonly setCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['setCookie']
		>
		readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
		readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
		readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
		readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
		readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
		readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
		readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
		readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
		readonly unref: UnwrapRef<typeof import('vue')['unref']>
		readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
		readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
		readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
		readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
		readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
		readonly useSentenceCase: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSentenceCase']
		>
		readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
		readonly useSlug: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSlug']
		>
		readonly useSlugWithoutDash: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSlugWithoutDash']
		>
		readonly useTitleCase: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useTitleCase']
		>
		readonly useUnsignedLetters: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useUnsignedLetters']
		>
		readonly watch: UnwrapRef<typeof import('vue')['watch']>
		readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
		readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
		readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
	}
}
declare module '@vue/runtime-core' {
	interface ComponentCustomProperties {
		readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
		readonly GENERAL_GREETING: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['GENERAL_GREETING']
		>
		readonly ROUTER_BASE_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_BASE_PATH']
		>
		readonly ROUTER_COMMENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_NAME']
		>
		readonly ROUTER_COMMENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_COMMENT_PATH']
		>
		readonly ROUTER_CONTENT_COMMENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_NAME']
		>
		readonly ROUTER_CONTENT_COMMENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_COMMENT_PATH']
		>
		readonly ROUTER_CONTENT_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_NAME']
		>
		readonly ROUTER_CONTENT_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_CONTENT_PATH']
		>
		readonly ROUTER_HOME_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_NAME']
		>
		readonly ROUTER_HOME_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_HOME_PATH']
		>
		readonly ROUTER_LOGIN_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_NAME']
		>
		readonly ROUTER_LOGIN_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_LOGIN_PATH']
		>
		readonly ROUTER_NOT_FOUND_NAME: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_NAME']
		>
		readonly ROUTER_NOT_FOUND_PATH: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['ROUTER_NOT_FOUND_PATH']
		>
		readonly STORE_KEY_USER: UnwrapRef<
			typeof import('@/config/env/ENV_AUTO_IMPORT.mjs')['STORE_KEY_USER']
		>
		readonly computed: UnwrapRef<typeof import('vue')['computed']>
		readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
		readonly createRouter: UnwrapRef<
			typeof import('vue-router')['createRouter']
		>
		readonly createWebHistory: UnwrapRef<
			typeof import('vue-router')['createWebHistory']
		>
		readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
		readonly decode: UnwrapRef<typeof import('utils/StringHelper.ts')['decode']>
		readonly defineAsyncComponent: UnwrapRef<
			typeof import('vue')['defineAsyncComponent']
		>
		readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
		readonly deleteCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['deleteCookie']
		>
		readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
		readonly encode: UnwrapRef<typeof import('utils/StringHelper.ts')['encode']>
		readonly generateSentenceCase: UnwrapRef<
			typeof import('utils/StringHelper.ts')['generateSentenceCase']
		>
		readonly generateTitleCase: UnwrapRef<
			typeof import('utils/StringHelper.ts')['generateTitleCase']
		>
		readonly getCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['getCookie']
		>
		readonly getCurrentInstance: UnwrapRef<
			typeof import('vue')['getCurrentInstance']
		>
		readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
		readonly getCustomSlug: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getCustomSlug']
		>
		readonly getSlug: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getSlug']
		>
		readonly getSlugWithoutDash: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getSlugWithoutDash']
		>
		readonly getUnsignedLetters: UnwrapRef<
			typeof import('utils/StringHelper.ts')['getUnsignedLetters']
		>
		readonly h: UnwrapRef<typeof import('vue')['h']>
		readonly hashCode: UnwrapRef<
			typeof import('utils/StringHelper.ts')['hashCode']
		>
		readonly inject: UnwrapRef<typeof import('vue')['inject']>
		readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
		readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
		readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
		readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
		readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
		readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
		readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
		readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
		readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
		readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
		readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
		readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
		readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
		readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
		readonly onRenderTriggered: UnwrapRef<
			typeof import('vue')['onRenderTriggered']
		>
		readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
		readonly onServerPrefetch: UnwrapRef<
			typeof import('vue')['onServerPrefetch']
		>
		readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
		readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
		readonly provide: UnwrapRef<typeof import('vue')['provide']>
		readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
		readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
		readonly ref: UnwrapRef<typeof import('vue')['ref']>
		readonly resolveComponent: UnwrapRef<
			typeof import('vue')['resolveComponent']
		>
		readonly setCookie: UnwrapRef<
			typeof import('utils/CookieHelper.ts')['setCookie']
		>
		readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
		readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
		readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
		readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
		readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
		readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
		readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
		readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
		readonly unref: UnwrapRef<typeof import('vue')['unref']>
		readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
		readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
		readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
		readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
		readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
		readonly useSentenceCase: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSentenceCase']
		>
		readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
		readonly useSlug: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSlug']
		>
		readonly useSlugWithoutDash: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useSlugWithoutDash']
		>
		readonly useTitleCase: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useTitleCase']
		>
		readonly useUnsignedLetters: UnwrapRef<
			typeof import('composable/useStringHelper.ts')['useUnsignedLetters']
		>
		readonly watch: UnwrapRef<typeof import('vue')['watch']>
		readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
		readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
		readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
	}
}
